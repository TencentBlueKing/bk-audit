# Generated by Django 4.2.19 on 2025-04-02 03:19

from django.db import migrations, models


def migrate_meta_system_instance_id(apps, schema_editor):
    system = apps.get_model('meta', 'System')
    # 更新当前系统的 instance_id 为 system_id
    system.objects.all().update(instance_id=models.F('system_id'))
    # 更新所有系统的 callback_url 和 auth_token
    systems = system.objects.all()
    for system in systems:
        system.callback_url = system.provider_config.get("host")
        system.auth_token = system.provider_config.get("token")
        system.save(update_fields=['callback_url', 'auth_token'])


def migrate_meta_resource_type_path(apps, schema_editor):
    resource_type = apps.get_model('meta', 'ResourceType')
    # 更新所有资源类型的 path
    for rt in resource_type.objects.all():
        rt.path = rt.provider_config.get('path', "")
        rt.save(update_fields=['path'])


class Migration(migrations.Migration):
    dependencies = [
        ('meta', '0013_field_property'),
    ]

    operations = [
        migrations.AddField(
            model_name='action',
            name='resource_type_ids',
            field=models.JSONField(blank=True, default=list, verbose_name='资源类型ID'),
        ),
        migrations.AddField(
            model_name='resourcetype',
            name='ancestors',
            field=models.JSONField(blank=True, default=list, verbose_name='父资源类型'),
        ),
        migrations.AddField(
            model_name='resourcetype',
            name='path',
            field=models.CharField(default='', max_length=255, verbose_name='资源路径'),
        ),
        migrations.RunPython(migrate_meta_resource_type_path),
        migrations.AddField(
            model_name='system',
            name='auth_token',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='系统鉴权 Token'),
        ),
        migrations.AddField(
            model_name='system',
            name='callback_url',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='回调地址'),
        ),
        migrations.AddField(
            model_name='system',
            name='instance_id',
            field=models.CharField(default='', max_length=32, verbose_name='系统实例ID'),
        ),
        migrations.AddField(
            model_name='system',
            name='managers',
            field=models.JSONField(blank=True, default=list, verbose_name='系统管理员'),
        ),
        migrations.AddField(
            model_name='system',
            name='source_type',
            field=models.CharField(
                choices=[('iam_v3', '权限中心V3'), ('iam_v4', '权限中心V4'), ('bk_audit', '审计中心')],
                default='iam_v3',
                max_length=32,
                verbose_name='系统来源类型',
            ),
        ),
        migrations.AlterField(
            model_name='action',
            name='name_en',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='英文名称'),
        ),
        migrations.AlterField(
            model_name='action',
            name='sensitivity',
            field=models.IntegerField(default=0, verbose_name='敏感等级'),
        ),
        migrations.AlterField(
            model_name='action',
            name='type',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='操作类型'),
        ),
        migrations.AlterField(
            model_name='action',
            name='version',
            field=models.IntegerField(blank=True, default=0, verbose_name='版本'),
        ),
        migrations.AlterField(
            model_name='resourcetype',
            name='name_en',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='英文名称'),
        ),
        migrations.AlterField(
            model_name='resourcetype',
            name='provider_config',
            field=models.JSONField(blank=True, default=dict, help_text='IAM V3', null=True, verbose_name='资源类型配置'),
        ),
        migrations.AlterField(
            model_name='resourcetype',
            name='sensitivity',
            field=models.IntegerField(default=0, verbose_name='敏感等级'),
        ),
        migrations.AlterField(
            model_name='resourcetype',
            name='version',
            field=models.IntegerField(blank=True, default=0, verbose_name='版本'),
        ),
        migrations.AlterField(
            model_name='system',
            name='clients',
            field=models.JSONField(blank=True, null=True, verbose_name='客户端'),
        ),
        migrations.AlterField(
            model_name='system',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='应用描述'),
        ),
        migrations.AlterField(
            model_name='system',
            name='logo_url',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='应用图标'),
        ),
        migrations.AlterField(
            model_name='system',
            name='name',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='system',
            name='name_en',
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name='英文名称'),
        ),
        migrations.AlterField(
            model_name='system',
            name='provider_config',
            field=models.JSONField(blank=True, default=dict, help_text='IAM V3', null=True, verbose_name='系统配置'),
        ),
        migrations.AlterField(
            model_name='system',
            name='system_url',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='访问地址'),
        ),
        migrations.RunPython(migrate_meta_system_instance_id),
        migrations.AlterUniqueTogether(
            name='system',
            unique_together={('source_type', 'instance_id')},
        ),
        migrations.AlterField(
            model_name='system',
            name='system_diagnosis_extra',
            field=models.JSONField(blank=True, default=dict, verbose_name='系统诊断额外信息'),
        ),
    ]
