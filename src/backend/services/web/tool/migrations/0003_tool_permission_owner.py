# Generated by Django 4.2.23 on 2025-08-14 11:58

from django.db import migrations, models
from django.db.models import F


def migrate_created_by_to_owner(apps, schema_editor):
    """
    将 tool 表中的 created_by 数据迁移到 permission_owner 字段。
    """
    Tool = apps.get_model('tool', 'Tool')
    # 使用 F() 表达式进行批量更新，这会直接在数据库层面操作，效率很高。
    # 它会执行类似于 SQL "UPDATE tool_tool SET permission_owner = created_by;" 的操作。
    Tool.objects.update(permission_owner=F('created_by'))


class Migration(migrations.Migration):
    dependencies = [
        ('tool', '0002_alter_bkvisiontoolconfig_panel_and_more'),
    ]

    operations = [
        # 步骤 1: 新增 permission_owner 字段，并暂时允许其为空。
        migrations.AddField(
            model_name='tool',
            name='permission_owner',
            field=models.CharField(max_length=255, null=True, verbose_name='权限负责人', help_text='用于工具的权限认证'),
        ),
        # 步骤 2: 执行数据迁移操作。
        migrations.RunPython(migrate_created_by_to_owner, reverse_code=migrations.RunPython.noop),
        # 步骤 3: 修改字段约束，将其设置为非空。
        migrations.AlterField(
            model_name='tool',
            name='permission_owner',
            field=models.CharField(max_length=255, verbose_name='权限负责人', help_text='用于工具的权限认证'),
        ),
    ]
