# Generated by Django 4.2.19 on 2025-07-14 17:28
from django.db import migrations, models

from apps.meta.models import Tag
from services.web.risk.models import Risk


def migrate_risk_tags_to_tag_objs(apps, schema_editor):
    Risk = apps.get_model('risk', 'Risk')
    Tag = apps.get_model('meta', 'Tag')
    through_model = Risk.tag_objs.through
    db_alias = schema_editor.connection.alias

    # 获取所有有效 tag_id
    all_tag_ids = set(Tag.objects.using(db_alias).values_list('tag_id', flat=True))

    # 获取所有 risk 的 risk_id 和 tags 字段
    risk_qs = Risk.objects.using(db_alias).all().only('risk_id', 'tags')
    relations = []
    for risk in risk_qs:
        raw_tags = getattr(risk, 'tags', None)
        if not raw_tags or not isinstance(raw_tags, list):
            continue
        valid_tag_ids = [tag_id for tag_id in raw_tags if tag_id in all_tag_ids]
        for tag_id in valid_tag_ids:
            relations.append(through_model(risk_id=risk.risk_id, tag_id=tag_id))

    # 批量插入
    if relations:
        through_model.objects.using(db_alias).bulk_create(relations, batch_size=1000)


class Migration(migrations.Migration):
    dependencies = [
        ('risk', '0028_merge_20250715_1528'),
    ]

    operations = [
        migrations.AddField(
            model_name='risk',
            name='tag_objs',
            field=models.ManyToManyField(blank=True, related_name='risks', to='meta.tag', verbose_name='Tags'),
        ),
        migrations.RunPython(
            code=migrate_risk_tags_to_tag_objs,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name='risk',
            name='tags',
        ),
    ]
